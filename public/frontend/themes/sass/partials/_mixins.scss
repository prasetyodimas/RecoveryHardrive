// all mixin variable here !!

// MIXIN BORDER RADIUS
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

// CUSTOM BORDER RADIUS TOP, RIGHT , BOTTOM, LEFT
@mixin border-top-left-radius($radius) {
  -webkit-border-top-left-radius: $radius;
  -moz-border-top-left-radius: $radius;
	-o-border-top-left-radius: $radius;
	border-top-left-radius: $radius;
}
// BORDER BOTTOM TOP RIGHT RADIUS
@mixin border-top-right-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  -moz-border-top-right-radius: $radius;
  -o-border-top-right-radius: $radius;
	border-top-right-radius: $radius;
}

// BORDER BOTTOM LEFT RADIUS
@mixin border-bottom-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  -moz-border-bottom-left-radius: $radius;
  -o-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
}
// BORDER BOTTOM RIGHT RADIUS
@mixin border-bottom-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
	-moz-border-bottom-right-radius: $radius;
	-o-border-bottom-left-radius: $radius;
	border-bottom-left-radius: $radius;
}

// BOX SHADOW
@mixin box-shadow($left, $top, $radius, $color) {
	-webkit-box-shadow: $left $top $radius $color;
  -moz-box-shadow: $left $top $radius $color;
	-o-box-shadow: $left $top $radius $color;
  box-shadow: $left $top $radius $color;
}

// TRANSITION
@mixin transition($property, $duration, $easing: linear) {
	-webkit-transition: $property $duration $easing;
  -moz-transition: $property $duration $easing;
	-o-transition: $property $duration $easing;
  transition: $property $duration $easing;
}

// MIXIN RETINA IMAGES
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
      background-image: url($image);
      background-size: $width $height;
  }
}

//MIXIN CLEARFIX
@mixin clearfix() {
  &:before,
  &:after {
      content: "";
      display: table;
  }
  &:after {
      clear: both;
  }
}

//BOX SIZING
@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model;
     -moz-box-sizing: $box-model;
          box-sizing: $box-model;
}

//OPACITY
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie);
}

//FONT SIZE
@mixin font-size($sizeValue: 12 ){
  font-size: $sizeValue + px;
  font-size: (0.125 * $sizeValue) + rem;
}

// GRADIENT
@mixin gradient($color1, $color2) {
	background-color: $color1;
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$color1}, endColorstr=#{$color2});
	background-image: -moz-linear-gradient(center top, $color1, $color2);
	background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($color1), to($color2));
}

// BUTTON
@mixin button-bg($bg) {
  background: $bg;
  &:hover {
    background:darken($bg,8%);
    transition: all 0.3s ease;
  }
  &:active {
    background:darken($bg,25%);
  }
}

// MIXIN FONT FACE
@mixin font-face($style-name, $file, $family, $category:"") {
    $filepath: "fonts/font-poiret/" + $family + "/" + $file;
    @font-face {
        font-family: "#{$style-name}";
        src: url($filepath + ".eot");
        src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
    }
    %#{$style-name} {
        font: {
            @if $category != "" {
                family: "#{$style-name}", #{$category};
            }
            @else {
                family: "#{$style-name}";
                weight: normal;
            }
        }
    }
}

//MIXIN LINK
@mixin linx ($link, $visit, $hover, $active) {
  a {
    color: $link;
    &:visited {
      color: $visit;
    }
    &:hover {
      color: $hover;
    }
    &:active {
      color: $active;
    }
  }
}

//MIXIN ANIMATION
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($params) {
  -webkit-animation: #{$params};
  -moz-animation: #{$params};
  -ms-animation: #{$params};
  -o-animation: #{$params};
  animation: #{$params};
}

// MIXIN TRANSITION
@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
